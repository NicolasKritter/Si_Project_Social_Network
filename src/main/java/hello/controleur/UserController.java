package hello.controleur;

import java.io.IOException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import hello.model.ContenusRepository;
import hello.model.UtilisateurRepository;
import hello.tables.Contenus;
import hello.tables.Utilisateur;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/utilisateur", method = { RequestMethod.POST,
		RequestMethod.GET }) // This means URL's start with /demo (after
								// Application path)
public class UserController {
	@Autowired // This means to get the bean called userRepository
				// Which is auto-generated by Spring, we will use it to handle
				// the data
	private UtilisateurRepository userRepository;

	@Autowired 
	private ContenusRepository contenusRepository;


	@GetMapping(path = "/fil-actu")
	public @ResponseBody ModelAndView logged(HttpServletRequest request,
			HttpServletResponse response) throws IOException {
		ModelAndView model = new ModelAndView("fil-actu");
		Authentication auth = SecurityContextHolder.getContext()
				.getAuthentication(); 
		Utilisateur utilisateur = userRepository.findByLogin(auth.getName());
		Iterable<Contenus> list = contenusRepository.findByEcoleId(utilisateur.getEcole().getId());
		model.addObject("nom", utilisateur.getNom());
		model.addObject("prenom",utilisateur.getPrenom());
		model.addObject("list", list);
 		return model;

	}

	@GetMapping(path = "/error")
	public @ResponseBody void error(HttpServletRequest request,
			HttpServletResponse response) throws IOException {

		HttpSession session = request.getSession();
		response.sendError(HttpServletResponse.SC_BAD_REQUEST, session
				.getAttribute("SPRING_SECURITY_LAST_EXCEPTION").toString());
	}

	@GetMapping(path = "/login")
	public @ResponseBody ModelAndView login() {
		ModelAndView model = new ModelAndView("login");

		return model;
	}

	
//
//	@RequestMapping("/{userId}/")
//	public @ResponseBody Utilisateur dataUtilisateur(@PathVariable int userId,
//			HttpServletRequest request, HttpServletResponse response)
//			throws IOException {
//		Utilisateur user = userRepository.findById(userId);
//		if (user != null) {
//			return user;
//
//		} else {
//			response.sendError(HttpServletResponse.SC_BAD_REQUEST,
//					"Access Denied");
//			return null;
//		}
//
//	}

//	@RequestMapping("/{userId}/infos")
//	public @ResponseBody JSONObject infoUser(@PathVariable int userId,
//			HttpServletRequest request, HttpServletResponse response)
//			throws IOException {
//		Utilisateur user = userRepository.findById(userId);
//		if (user != null) {
//
//			JSONObject reponse = new JSONObject();
//			reponse.put("email", user.getEmail());
//			reponse.put("nom", user.getNom());
//			reponse.put("prenom", user.getPrenom());
//			;
//
//			return reponse;
//		}
//
//		else {
//			response.sendError(HttpServletResponse.SC_BAD_REQUEST,
//					"Access Denied");
//			return null;
//		}
//	}


}
