package hello.controleur;

import java.io.IOException;
import java.net.URL;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import hello.model.EcoleRepository;
import hello.tables.Ecole;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/ecole", method = { RequestMethod.POST,
		RequestMethod.GET }) // This means URL's start with /demo (after
								// Application path)
public class EcoleController {
	@Autowired // This means to get the bean called userRepository
				// Which is auto-generated by Spring, we will use it to handle
				// the data
	private EcoleRepository ecoleRepository;

	@RequestMapping("/{ecoleId}/")
	public @ResponseBody Ecole getEcoleByid(@PathVariable int ecoleId,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		Ecole ecole = ecoleRepository.findById(ecoleId);
		if (ecole != null) {
			return ecole;

		} else {
			response.sendError(HttpServletResponse.SC_BAD_REQUEST,
					"Access Denied");
			return null;
		}

	}

	@RequestMapping("/{ecoleId}/fil")
	public @ResponseBody ModelAndView getFeedsByEcoleId(
			@PathVariable int ecoleId, HttpServletRequest request,
			HttpServletResponse response) throws IOException {
		Ecole ecole = ecoleRepository.findById(ecoleId);

		if (ecole != null) {
			URL requestURL = new URL(request.getRequestURL().toString());
			String baseUrl = requestURL.getHost();
			String url = baseUrl + ":8080"
					+ "/utilisateur/reinitialisation-password/";

			ModelAndView model = new ModelAndView("reinitialiser-password");
			model.addObject("url", url);
			model.addObject("message", "Reset your password");
			model.addObject("id:", 12);
			model.addObject("done", false);

			return model;

		} else {
			response.sendError(HttpServletResponse.SC_BAD_REQUEST,
					"Access Denied");
			return null;
		}

	}

	@RequestMapping("/test")
	public @ResponseBody ModelAndView test(HttpServletRequest request,
			HttpServletResponse response) throws IOException {

		URL requestURL = new URL(request.getRequestURL().toString());
		String baseUrl = requestURL.getHost();
		String url = baseUrl + ":8080"
				+ "/utilisateur/reinitialisation-password/";

		ModelAndView model = new ModelAndView("reinitialiser-password");
		model.addObject("url", url);
		model.addObject("message", "Reset your password");
		model.addObject("id:", 12);
		model.addObject("done", false);

		return model;

	}

	// @RequestMapping("/reinitialisation-password/{token}")
	// public @ResponseBody ModelAndView reinitialiserfPassword(
	// @PathVariable String token,
	// @RequestParam(required = false) String password,
	// @RequestParam int id, HttpServletRequest request,
	// HttpServletResponse response) throws IOException, MessagingException {
	// Token initToken = tokenRepository.findByContent(token);
	// Calendar cal = Calendar.getInstance();
	// Date now = new Date(cal.getTimeInMillis());
	// if (initToken != null) {// &&
	// // request.getSession().getAttribute("idUser").equals(userId))
	// // {
	// if (initToken.getDate().toString().equals(now.toString())) {
	//
	// if (password != null & password != "") {
	// Utilisateur user = userRepository
	// .findById(initToken.getUserId());
	// if (user != null && id == user.getId()) {
	// user.setPassword(passwordEncoder.encode(password));
	// userRepository.save(user);
	// tokenRepository.delete(initToken);
	//
	// ModelAndView model = new ModelAndView(
	// "reinitialiser-password");
	// model.addObject("url", "#");
	// model.addObject("done",true);
	// model.addObject("message",
	// "Your password has been changed");
	// model.addObject("id:", 0);
	// MimeMessage message = emailSender
	// .constructComfirmResetTokenEmail(user);
	// emailSender.sendEmail(message);
	//
	// return model;
	// } else {
	// response.sendError(HttpServletResponse.SC_BAD_REQUEST,
	// "Access Denied");
	// tokenRepository.delete(initToken);
	//
	// return null;
	// }
	// } else {
	// URL requestURL = new URL(
	// request.getRequestURL().toString());
	// String baseUrl = requestURL.getHost();
	// String url = baseUrl+":8080"
	// + "/utilisateur/reinitialisation-password/"
	// + initToken.getContent() + "?id=" + id;
	//
	// ModelAndView model = new ModelAndView(
	// "reinitialiser-password");
	// model.addObject("url", url);
	// model.addObject("message", "Reset your password");
	// model.addObject("id:", id);
	// model.addObject("done",false);
	//
	// return model;
	// }
	//
	// } else {
	// response.sendError(HttpServletResponse.SC_BAD_REQUEST,
	// "Access Denied");
	// tokenRepository.delete(initToken);
	// return null;
	// }
	//
	// } else {
	// response.sendError(HttpServletResponse.SC_BAD_REQUEST,
	// "Access Denied");
	// return null;
	// }
	// }

}
